{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\34657\\\\Desktop\\\\AzureFullstackProject\\\\ms-identity-javascript-react-tutorial\\\\3-Authorization-II\\\\1-call-api\\\\SPA\\\\src\\\\components\\\\NavigationBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from '@azure/msal-react';\nimport { Nav, Navbar, Dropdown, DropdownButton } from 'react-bootstrap';\nimport { loginRequest } from '../authConfig';\nimport { AccountPicker } from './AccountPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NavigationBar = () => {\n  _s();\n  const [showProfilePicker, setShowProfilePicker] = useState(false);\n  const {\n    instance\n  } = useMsal();\n  let activeAccount;\n  if (instance) {\n    activeAccount = instance.getActiveAccount();\n  }\n  const handleLoginRedirect = () => {\n    instance.loginRedirect(loginRequest).catch(error => console.log(error));\n  };\n  const handleLoginPopup = () => {\n    /**\r\n     * When using popup and silent APIs, we recommend setting the redirectUri to a blank page or a page \r\n     * that does not implement MSAL. Keep in mind that all redirect routes must be registered with the application\r\n     * For more information, please follow this link: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/login-user.md#redirecturi-considerations \r\n     */\n\n    instance.loginPopup({\n      ...loginRequest,\n      redirectUri: '/redirect'\n    }).catch(error => console.log(error));\n  };\n  const handleLogoutRedirect = () => {\n    instance.logoutRedirect({\n      account: instance.getActiveAccount()\n    });\n  };\n  const handleLogoutPopup = () => {\n    instance.logoutPopup({\n      mainWindowRedirectUri: '/',\n      // redirects the top level app after logout\n      account: instance.getActiveAccount()\n    });\n  };\n  const handleSwitchAccount = () => {\n    setShowProfilePicker(!showProfilePicker);\n  };\n\n  /**\r\n   * Most applications will need to conditionally render certain components based on whether a user is signed in or not.\r\n   * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will\r\n   * only render their children if a user is authenticated or unauthenticated, respectively.\r\n   */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      className: \"navbarStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"/\",\n        children: \"Microsoft identity platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AuthenticatedTemplate, {\n        children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n          className: \"navbarButton\",\n          href: \"/todolist\",\n          children: \"Todolist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collapse navbar-collapse justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n            variant: \"warning\",\n            drop: \"start\",\n            title: activeAccount ? activeAccount.name : 'Unknown',\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              as: \"button\",\n              onClick: handleSwitchAccount,\n              children: \"Switch account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              as: \"button\",\n              onClick: handleLogoutPopup,\n              children: \"Sign out using Popup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              as: \"button\",\n              onClick: handleLogoutRedirect,\n              children: \"Sign out using Redirect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UnauthenticatedTemplate, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collapse navbar-collapse justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n            variant: \"secondary\",\n            className: \"ml-auto\",\n            drop: \"start\",\n            title: \"Sign In\",\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              as: \"button\",\n              onClick: handleLoginPopup,\n              children: \"Sign in using Popup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              as: \"button\",\n              onClick: handleLoginRedirect,\n              children: \"Sign in using Redirect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AccountPicker, {\n      show: showProfilePicker,\n      handleSwitchAccount: handleSwitchAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(NavigationBar, \"QriMXRaLIrDI/wRA5X6YkmXK1QI=\", false, function () {\n  return [useMsal];\n});\n_c = NavigationBar;\nvar _c;\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"names":["useState","AuthenticatedTemplate","UnauthenticatedTemplate","useMsal","Nav","Navbar","Dropdown","DropdownButton","loginRequest","AccountPicker","NavigationBar","showProfilePicker","setShowProfilePicker","instance","activeAccount","getActiveAccount","handleLoginRedirect","loginRedirect","catch","error","console","log","handleLoginPopup","loginPopup","redirectUri","handleLogoutRedirect","logoutRedirect","account","handleLogoutPopup","logoutPopup","mainWindowRedirectUri","handleSwitchAccount","name"],"sources":["C:/Users/34657/Desktop/AzureFullstackProject/ms-identity-javascript-react-tutorial/3-Authorization-II/1-call-api/SPA/src/components/NavigationBar.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from '@azure/msal-react';\r\nimport { Nav, Navbar, Dropdown, DropdownButton } from 'react-bootstrap';\r\n\r\nimport { loginRequest } from '../authConfig';\r\nimport { AccountPicker } from './AccountPicker';\r\n\r\nexport const NavigationBar = () => {\r\n    const [showProfilePicker, setShowProfilePicker] = useState(false);\r\n    const { instance } = useMsal();\r\n\r\n    let activeAccount;\r\n\r\n    if (instance) {\r\n        activeAccount = instance.getActiveAccount();\r\n    }\r\n\r\n    const handleLoginRedirect = () => {\r\n        instance.loginRedirect(loginRequest)\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const handleLoginPopup = () => {\r\n        /**\r\n         * When using popup and silent APIs, we recommend setting the redirectUri to a blank page or a page \r\n         * that does not implement MSAL. Keep in mind that all redirect routes must be registered with the application\r\n         * For more information, please follow this link: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/login-user.md#redirecturi-considerations \r\n         */\r\n\r\n        instance.loginPopup({\r\n            ...loginRequest,\r\n            redirectUri: '/redirect'\r\n        }).catch((error) => console.log(error));\r\n    };\r\n\r\n    const handleLogoutRedirect = () => {\r\n        instance.logoutRedirect({\r\n            account: instance.getActiveAccount(),\r\n        });\r\n    };\r\n\r\n    const handleLogoutPopup = () => {\r\n        instance.logoutPopup({\r\n            mainWindowRedirectUri: '/', // redirects the top level app after logout\r\n            account: instance.getActiveAccount(),\r\n        });\r\n    };\r\n\r\n    const handleSwitchAccount = () => {\r\n        setShowProfilePicker(!showProfilePicker);\r\n    };\r\n\r\n    /**\r\n     * Most applications will need to conditionally render certain components based on whether a user is signed in or not.\r\n     * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will\r\n     * only render their children if a user is authenticated or unauthenticated, respectively.\r\n     */\r\n    return (\r\n        <>\r\n            <Navbar bg=\"primary\" variant=\"dark\" className=\"navbarStyle\">\r\n                <a className=\"navbar-brand\" href=\"/\">\r\n                    Microsoft identity platform\r\n                </a>\r\n                <AuthenticatedTemplate>\r\n                    <Nav.Link className=\"navbarButton\" href=\"/todolist\">\r\n                        Todolist\r\n                    </Nav.Link>\r\n                    <div className=\"collapse navbar-collapse justify-content-end\">\r\n                        <DropdownButton\r\n                            variant=\"warning\"\r\n                            drop=\"start\"\r\n                            title={activeAccount ? activeAccount.name : 'Unknown'}\r\n                        >\r\n                            <Dropdown.Item as=\"button\" onClick={handleSwitchAccount}>\r\n                                Switch account\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as=\"button\" onClick={handleLogoutPopup}>\r\n                                Sign out using Popup\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as=\"button\" onClick={handleLogoutRedirect}>\r\n                                Sign out using Redirect\r\n                            </Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </div>\r\n                </AuthenticatedTemplate>\r\n                <UnauthenticatedTemplate>\r\n                    <div className=\"collapse navbar-collapse justify-content-end\">\r\n                        <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"start\" title=\"Sign In\">\r\n                            <Dropdown.Item as=\"button\" onClick={handleLoginPopup}>\r\n                                Sign in using Popup\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as=\"button\" onClick={handleLoginRedirect}>\r\n                                Sign in using Redirect\r\n                            </Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </div>\r\n                </UnauthenticatedTemplate>\r\n            </Navbar>\r\n            <AccountPicker show={showProfilePicker} handleSwitchAccount={handleSwitchAccount} />\r\n        </>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}