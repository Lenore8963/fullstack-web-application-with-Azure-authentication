{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\34657\\\\Desktop\\\\AzureFullstackProject\\\\ms-identity-javascript-react-tutorial\\\\3-Authorization-II\\\\1-call-api\\\\SPA\\\\src\\\\components\\\\AccountPicker.jsx\",\n  _s = $RefreshSig$();\nimport { Modal, ListGroup } from 'react-bootstrap';\nimport { useMsal } from '@azure/msal-react';\nimport { loginRequest } from '../authConfig';\nimport { BsPersonPlus, BsPersonCircle } from 'react-icons/bs';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\nimport { IconContext } from 'react-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AccountPicker = props => {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const handleListItemClick = async account => {\n    const activeAccount = instance.getActiveAccount();\n    if (!account) {\n      instance.setActiveAccount(account);\n      instance.loginRedirect({\n        ...loginRequest,\n        prompt: 'login'\n      });\n    } else if (account && activeAccount.homeAccountId != account.homeAccountId) {\n      instance.setActiveAccount(account);\n      try {\n        await instance.ssoSilent({\n          ...loginRequest,\n          account: account\n        });\n        props.handleSwitchAccount(false);\n\n        // To ensure account related page attributes update after the account is changed\n        window.location.reload();\n      } catch (error) {\n        if (error instanceof InteractionRequiredAuthError) {\n          instance.loginRedirect({\n            ...loginRequest,\n            prompt: 'login'\n          });\n        }\n      }\n    } else {\n      props.handleSwitchAccount(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.show,\n      onHide: props.handleSwitchAccount,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Set active account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          as: \"ul\",\n          children: [accounts.map(account => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            as: \"li\",\n            role: \"button\",\n            active: instance.getActiveAccount().localAccountId === account.localAccountId ? true : false,\n            onClick: () => handleListItemClick(account),\n            className: \"d-flex flex-row align-items-start\",\n            children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n              value: {\n                size: '1.5rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(BsPersonCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"iconText\",\n              children: account.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, account.homeAccountId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            className: \"d-flex flex-row align-items-start\",\n            as: \"li\",\n            role: \"button\",\n            onClick: () => handleListItemClick(null),\n            children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n              value: {\n                size: '1.5rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(BsPersonPlus, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"iconText\",\n              children: \"New Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(AccountPicker, \"dXjh19YPAR1C3Q3VfJSLpkBSILY=\", false, function () {\n  return [useMsal];\n});\n_c = AccountPicker;\nvar _c;\n$RefreshReg$(_c, \"AccountPicker\");","map":{"version":3,"names":["Modal","ListGroup","useMsal","loginRequest","BsPersonPlus","BsPersonCircle","InteractionRequiredAuthError","IconContext","AccountPicker","props","instance","accounts","handleListItemClick","account","activeAccount","getActiveAccount","setActiveAccount","loginRedirect","prompt","homeAccountId","ssoSilent","handleSwitchAccount","window","location","reload","error","show","map","localAccountId","size","name"],"sources":["C:/Users/34657/Desktop/AzureFullstackProject/ms-identity-javascript-react-tutorial/3-Authorization-II/1-call-api/SPA/src/components/AccountPicker.jsx"],"sourcesContent":["import { Modal, ListGroup } from 'react-bootstrap';\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { loginRequest } from '../authConfig';\r\nimport { BsPersonPlus, BsPersonCircle } from 'react-icons/bs';\r\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\r\nimport { IconContext } from 'react-icons';\r\n\r\nexport const AccountPicker = (props) => {\r\n    const { instance, accounts } = useMsal();\r\n\r\n    const handleListItemClick = async (account) => {\r\n        const activeAccount = instance.getActiveAccount();\r\n        if (!account) {\r\n            instance.setActiveAccount(account);\r\n            instance.loginRedirect({\r\n                ...loginRequest,\r\n                prompt: 'login',\r\n            });\r\n        } else if (account && activeAccount.homeAccountId != account.homeAccountId) {\r\n            instance.setActiveAccount(account);\r\n            try {\r\n                await instance.ssoSilent({\r\n                    ...loginRequest,\r\n                    account: account,\r\n                });\r\n\r\n                props.handleSwitchAccount(false);\r\n\r\n                // To ensure account related page attributes update after the account is changed\r\n                window.location.reload();\r\n            } catch (error) {\r\n                if (error instanceof InteractionRequiredAuthError) {\r\n                    instance.loginRedirect({\r\n                        ...loginRequest,\r\n                        prompt: 'login',\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            props.handleSwitchAccount(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={props.handleSwitchAccount}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Set active account</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ListGroup as=\"ul\">\r\n                        {accounts.map((account) => (\r\n                            <ListGroup.Item\r\n                                as=\"li\"\r\n                                role=\"button\"\r\n                                active={\r\n                                    instance.getActiveAccount().localAccountId === account.localAccountId ? true : false\r\n                                }\r\n                                key={account.homeAccountId}\r\n                                onClick={() => handleListItemClick(account)}\r\n                                className=\"d-flex flex-row align-items-start\"\r\n                            >\r\n                                <IconContext.Provider value={{ size: '1.5rem' }}>\r\n                                    <BsPersonCircle />\r\n                                </IconContext.Provider>\r\n                                <p className=\"iconText\">{account.name}</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        <ListGroup.Item\r\n                            className=\"d-flex flex-row align-items-start\"\r\n                            as=\"li\"\r\n                            role=\"button\"\r\n                            onClick={() => handleListItemClick(null)}\r\n                        >\r\n                            <IconContext.Provider value={{ size: '1.5rem' }}>\r\n                                <BsPersonPlus />\r\n                            </IconContext.Provider>\r\n                            <p className=\"iconText\">New Account</p>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}