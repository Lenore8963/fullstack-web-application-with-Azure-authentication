{"ast":null,"code":"/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\r\n * Configuration object to be passed to MSAL instance on creation.\r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\r\n */\nexport const msalConfig = {\n  auth: {\n    clientId: \"6fdd1cb0-2d46-4e4b-b7be-60aef92394e5\",\n    // This is the ONLY mandatory field that you need to supply.\n    authority: \"https://login.microsoftonline.com/a8eec281-aaa3-4dae-ac9b-9a398b9215e7\",\n    // Defaults to \"https://login.microsoftonline.com/common\"\n    redirectUri: \"/\",\n    // You must register this URI on Azure Portal/App Registration. Defaults to window.location.origin\n    postLogoutRedirectUri: \"/\",\n    // Indicates the page to navigate after logout.\n    clientCapabilities: [\"CP1\"] // this lets the resource owner know that this client is capable of handling claims challenge.\n  },\n\n  cache: {\n    cacheLocation: \"localStorage\",\n    // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\n    storeAuthStateInCookie: false // Set this to \"true\" if you are having issues on IE11 or Edge\n  },\n\n  system: {\n    loggerOptions: {\n      /**\r\n       * Below you can configure MSAL.js logs. For more information, visit:\r\n       * https://docs.microsoft.com/azure/active-directory/develop/msal-logging-js\r\n       */\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n          case LogLevel.Info:\n            console.info(message);\n            return;\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n        }\n      }\n    }\n  }\n};\n\n/**\r\n * Add here the endpoints and scopes when obtaining an access token for protected web APIs. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\nexport const protectedResources = {\n  apiTodoList: {\n    endpoint: \"http://localhost:5000/api/todolist\",\n    scopes: {\n      read: [\"api://b6ffbd30-541d-46cd-bcd6-4c67dddaf04c/Todolist.Read\"],\n      write: [\"api://b6ffbd30-541d-46cd-bcd6-4c67dddaf04c/Todolist.ReadWrite\"]\n    }\n  }\n};\n\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit:\r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\nexport const loginRequest = {\n  scopes: [...protectedResources.apiTodoList.scopes.read, ...protectedResources.apiTodoList.scopes.write]\n};","map":{"version":3,"names":["LogLevel","msalConfig","auth","clientId","authority","redirectUri","postLogoutRedirectUri","clientCapabilities","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","Error","console","error","Info","info","Verbose","debug","Warning","warn","protectedResources","apiTodoList","endpoint","scopes","read","write","loginRequest"],"sources":["C:/Users/34657/Desktop/AzureFullstackProject/ms-identity-javascript-react-tutorial/3-Authorization-II/1-call-api/SPA/src/authConfig.js"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LogLevel } from \"@azure/msal-browser\";\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation.\r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\r\n */\r\nexport const msalConfig = {\r\n    auth: {\r\n        clientId: \"6fdd1cb0-2d46-4e4b-b7be-60aef92394e5\", // This is the ONLY mandatory field that you need to supply.\r\n        authority: \"https://login.microsoftonline.com/a8eec281-aaa3-4dae-ac9b-9a398b9215e7\", // Defaults to \"https://login.microsoftonline.com/common\"\r\n        redirectUri: \"/\", // You must register this URI on Azure Portal/App Registration. Defaults to window.location.origin\r\n        postLogoutRedirectUri: \"/\", // Indicates the page to navigate after logout.\r\n        clientCapabilities: [\"CP1\"] // this lets the resource owner know that this client is capable of handling claims challenge.\r\n    },\r\n    cache: {\r\n        cacheLocation: \"localStorage\", // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\r\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    },\r\n    system: {\r\n        loggerOptions: {\r\n            /**\r\n             * Below you can configure MSAL.js logs. For more information, visit:\r\n             * https://docs.microsoft.com/azure/active-directory/develop/msal-logging-js\r\n             */\r\n            loggerCallback: (level, message, containsPii) => {\r\n                if (containsPii) {\r\n                    return;\r\n                }\r\n                switch (level) {\r\n                    case LogLevel.Error:\r\n                        console.error(message);\r\n                        return;\r\n                    case LogLevel.Info:\r\n                        console.info(message);\r\n                        return;\r\n                    case LogLevel.Verbose:\r\n                        console.debug(message);\r\n                        return;\r\n                    case LogLevel.Warning:\r\n                        console.warn(message);\r\n                        return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Add here the endpoints and scopes when obtaining an access token for protected web APIs. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\r\nexport const protectedResources = {\r\n    apiTodoList: {\r\n        endpoint: \"http://localhost:5000/api/todolist\",\r\n        scopes: {\r\n            read: [ \"api://b6ffbd30-541d-46cd-bcd6-4c67dddaf04c/Todolist.Read\" ],\r\n            write: [ \"api://b6ffbd30-541d-46cd-bcd6-4c67dddaf04c/Todolist.ReadWrite\" ]\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit:\r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n    scopes: [...protectedResources.apiTodoList.scopes.read, ...protectedResources.apiTodoList.scopes.write]\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,qBAAqB;;AAE9C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG;EACtBC,IAAI,EAAE;IACFC,QAAQ,EAAE,sCAAsC;IAAE;IAClDC,SAAS,EAAE,wEAAwE;IAAE;IACrFC,WAAW,EAAE,GAAG;IAAE;IAClBC,qBAAqB,EAAE,GAAG;IAAE;IAC5BC,kBAAkB,EAAE,CAAC,KAAK,CAAC,CAAC;EAChC,CAAC;;EACDC,KAAK,EAAE;IACHC,aAAa,EAAE,cAAc;IAAE;IAC/BC,sBAAsB,EAAE,KAAK,CAAE;EACnC,CAAC;;EACDC,MAAM,EAAE;IACJC,aAAa,EAAE;MACX;AACZ;AACA;AACA;MACYC,cAAc,EAAE,CAACC,KAAK,EAAEC,OAAO,EAAEC,WAAW,KAAK;QAC7C,IAAIA,WAAW,EAAE;UACb;QACJ;QACA,QAAQF,KAAK;UACT,KAAKd,QAAQ,CAACiB,KAAK;YACfC,OAAO,CAACC,KAAK,CAACJ,OAAO,CAAC;YACtB;UACJ,KAAKf,QAAQ,CAACoB,IAAI;YACdF,OAAO,CAACG,IAAI,CAACN,OAAO,CAAC;YACrB;UACJ,KAAKf,QAAQ,CAACsB,OAAO;YACjBJ,OAAO,CAACK,KAAK,CAACR,OAAO,CAAC;YACtB;UACJ,KAAKf,QAAQ,CAACwB,OAAO;YACjBN,OAAO,CAACO,IAAI,CAACV,OAAO,CAAC;YACrB;QAAO;MAEnB;IACJ;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMW,kBAAkB,GAAG;EAC9BC,WAAW,EAAE;IACTC,QAAQ,EAAE,oCAAoC;IAC9CC,MAAM,EAAE;MACJC,IAAI,EAAE,CAAE,0DAA0D,CAAE;MACpEC,KAAK,EAAE,CAAE,+DAA+D;IAC5E;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG;EACxBH,MAAM,EAAE,CAAC,GAAGH,kBAAkB,CAACC,WAAW,CAACE,MAAM,CAACC,IAAI,EAAE,GAAGJ,kBAAkB,CAACC,WAAW,CAACE,MAAM,CAACE,KAAK;AAC1G,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}